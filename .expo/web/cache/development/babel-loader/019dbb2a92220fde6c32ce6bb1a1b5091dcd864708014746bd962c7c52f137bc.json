{"ast":null,"code":"import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FavListScreen from \"../screens/FavouriteListScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport InfoScreen from \"../screens/InfoScreen\";\nimport TabBarIcon from \"../components/TabBarIcon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BottomTab = createBottomTabNavigator();\nvar INITIAL_ROUTE_NAME = \"Home\";\nexport default function BottomTabNavigator(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  tintColor = \"blue\";\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: INITIAL_ROUTE_NAME,\n    backBehavior: \"history\",\n    screenOptions: {\n      tabBarHideOnKeyboard: true,\n      tabBarInactiveBackgroundColor: '#354F52',\n      tabBarActiveBackgroundColor: '#2F3E46',\n      tabBarActiveTintColor: \"white\",\n      tabBarInactiveTintColor: 'white'\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"Home\",\n      component: FavListScreen,\n      options: {\n        title: \"Favourites\",\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return _jsx(TabBarIcon, {\n            focused: focused,\n            name: \"heart\"\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Search\",\n      component: SearchScreen,\n      options: {\n        title: \"Search\",\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return _jsx(TabBarIcon, {\n            focused: focused,\n            name: \"search-outline\"\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Info\",\n      component: InfoScreen,\n      options: {\n        title: \"Information\",\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return _jsx(TabBarIcon, {\n            focused: focused,\n            name: \"information-circle\"\n          });\n        }\n      }\n    })]\n  });\n}","map":{"version":3,"names":["createBottomTabNavigator","getFocusedRouteNameFromRoute","React","StyleSheet","FavListScreen","SearchScreen","LoginScreen","InfoScreen","TabBarIcon","jsx","_jsx","jsxs","_jsxs","BottomTab","INITIAL_ROUTE_NAME","BottomTabNavigator","_ref","navigation","route","tintColor","Navigator","initialRouteName","backBehavior","screenOptions","tabBarHideOnKeyboard","tabBarInactiveBackgroundColor","tabBarActiveBackgroundColor","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","name","component","options","title","tabBarIcon","_ref2","focused","_ref3","_ref4"],"sources":["D:/IFN666 Assignment 3/Assignment3/MobileAppAssignment/navigation/BottomTabNavigator.js"],"sourcesContent":["import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\r\nimport React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nimport FavListScreen from \"../screens/FavouriteListScreen\";\r\nimport SearchScreen from \"../screens/SearchScreen\";\r\nimport LoginScreen from \"../screens/LoginScreen\";\r\nimport InfoScreen from \"../screens/InfoScreen\";\r\nimport TabBarIcon from \"../components/TabBarIcon\";\r\n\r\nconst BottomTab = createBottomTabNavigator();\r\nconst INITIAL_ROUTE_NAME = \"Home\";\r\n\r\nexport default function BottomTabNavigator({ navigation, route }) {\r\n    tintColor = \"blue\"\r\n    return (\r\n        <BottomTab.Navigator\r\n            initialRouteName={INITIAL_ROUTE_NAME}\r\n            backBehavior=\"history\"\r\n            screenOptions={{\r\n                tabBarHideOnKeyboard: true,\r\n                tabBarInactiveBackgroundColor: '#354F52',\r\n                tabBarActiveBackgroundColor: '#2F3E46',\r\n                tabBarActiveTintColor: \"white\",\r\n                tabBarInactiveTintColor: 'white',\r\n            }}>\r\n            <BottomTab.Screen\r\n                name=\"Home\"\r\n                component={FavListScreen}\r\n                options={{\r\n                    title: \"Favourites\",\r\n                    tabBarIcon: ({ focused }) => (\r\n                        <TabBarIcon focused={focused} name=\"heart\" />\r\n                    ),\r\n                }}\r\n            />\r\n            <BottomTab.Screen\r\n                name=\"Search\"\r\n                component={SearchScreen}\r\n                options={{\r\n                    title: \"Search\",\r\n                    tabBarIcon: ({ focused }) => (\r\n                        <TabBarIcon focused={focused} name=\"search-outline\" />\r\n                    ),\r\n                }}\r\n            />\r\n            <BottomTab.Screen\r\n                name=\"Info\"\r\n                component={InfoScreen}\r\n                options={{\r\n                    title: \"Information\",\r\n                    tabBarIcon: ({ focused }) => (\r\n                        <TabBarIcon focused={focused} name=\"information-circle\" />\r\n                    ),\r\n                }}\r\n            />\r\n            {/* to be removed and put into stack navigator later */}\r\n            {/* <BottomTab.Screen\r\n                name=\"SignIn\"\r\n                component={LoginScreen}\r\n                options={{\r\n                    headerTitle: \"Welcome back!\",\r\n                    tabBarLabel: \"Login\",\r\n                    tabBarIcon: ({ focused }) => (\r\n                        <TabBarIcon focused={focused} name=\"log-in-outline\" />\r\n                    ),\r\n                }}\r\n            /> */}\r\n        </BottomTab.Navigator>\r\n    );\r\n}\r\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,4BAA4B,QAAQ,0BAA0B;AACvE,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAG1B,OAAOC,aAAa;AACpB,OAAOC,YAAY;AACnB,OAAOC,WAAW;AAClB,OAAOC,UAAU;AACjB,OAAOC,UAAU;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElD,IAAMC,SAAS,GAAGb,wBAAwB,CAAC,CAAC;AAC5C,IAAMc,kBAAkB,GAAG,MAAM;AAEjC,eAAe,SAASC,kBAAkBA,CAAAC,IAAA,EAAwB;EAAA,IAArBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAC1DC,SAAS,GAAG,MAAM;EAClB,OACIP,KAAA,CAACC,SAAS,CAACO,SAAS;IAChBC,gBAAgB,EAAEP,kBAAmB;IACrCQ,YAAY,EAAC,SAAS;IACtBC,aAAa,EAAE;MACXC,oBAAoB,EAAE,IAAI;MAC1BC,6BAA6B,EAAE,SAAS;MACxCC,2BAA2B,EAAE,SAAS;MACtCC,qBAAqB,EAAE,OAAO;MAC9BC,uBAAuB,EAAE;IAC7B,CAAE;IAAAC,QAAA,GACFnB,IAAA,CAACG,SAAS,CAACiB,MAAM;MACbC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAE5B,aAAc;MACzB6B,OAAO,EAAE;QACLC,KAAK,EAAE,YAAY;QACnBC,UAAU,EAAE,SAAAA,WAAAC,KAAA;UAAA,IAAGC,OAAO,GAAAD,KAAA,CAAPC,OAAO;UAAA,OAClB3B,IAAA,CAACF,UAAU;YAAC6B,OAAO,EAAEA,OAAQ;YAACN,IAAI,EAAC;UAAO,CAAE,CAAC;QAAA;MAErD;IAAE,CACL,CAAC,EACFrB,IAAA,CAACG,SAAS,CAACiB,MAAM;MACbC,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAE3B,YAAa;MACxB4B,OAAO,EAAE;QACLC,KAAK,EAAE,QAAQ;QACfC,UAAU,EAAE,SAAAA,WAAAG,KAAA;UAAA,IAAGD,OAAO,GAAAC,KAAA,CAAPD,OAAO;UAAA,OAClB3B,IAAA,CAACF,UAAU;YAAC6B,OAAO,EAAEA,OAAQ;YAACN,IAAI,EAAC;UAAgB,CAAE,CAAC;QAAA;MAE9D;IAAE,CACL,CAAC,EACFrB,IAAA,CAACG,SAAS,CAACiB,MAAM;MACbC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAEzB,UAAW;MACtB0B,OAAO,EAAE;QACLC,KAAK,EAAE,aAAa;QACpBC,UAAU,EAAE,SAAAA,WAAAI,KAAA;UAAA,IAAGF,OAAO,GAAAE,KAAA,CAAPF,OAAO;UAAA,OAClB3B,IAAA,CAACF,UAAU;YAAC6B,OAAO,EAAEA,OAAQ;YAACN,IAAI,EAAC;UAAoB,CAAE,CAAC;QAAA;MAElE;IAAE,CACL,CAAC;EAAA,CAae,CAAC;AAE9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}