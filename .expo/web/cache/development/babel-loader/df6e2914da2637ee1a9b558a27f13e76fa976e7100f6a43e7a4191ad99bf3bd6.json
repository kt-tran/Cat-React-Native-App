{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useLoggerContext } from \"../contexts/LoggerProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport default function LogScreen() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      title: \"New\",\n      onPress: function onPress() {\n        navigation.push(\"New\");\n      }\n    }), _jsx(EventLogList, {})]\n  });\n}\nfunction EventLogList() {\n  var _useLoggerContext = useLoggerContext(),\n    _useLoggerContext2 = _slicedToArray(_useLoggerContext, 2),\n    log = _useLoggerContext2[0],\n    setLog = _useLoggerContext2[1];\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: log.map(function (x) {\n      return _createElement(EventLog, _objectSpread(_objectSpread({}, x), {}, {\n        key: x.name\n      }));\n    })\n  });\n}\nfunction EventLog(props) {\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.event_title,\n      children: _jsx(Text, {\n        children: props.event\n      })\n    }), _jsx(View, {\n      style: styles.event_data,\n      children: props.data.map(function (x) {\n        return _jsx(Text, {\n          children: new Date(x).toString()\n        }, x);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  event_title: {\n    backgroundColor: \"red\",\n    padding: 5,\n    margin: 2,\n    borderRadius: 10\n  },\n  event_data: {\n    backgroundColor: \"#fff\",\n    margin: 2\n  }\n});","map":{"version":3,"names":["React","Text","Button","View","ScrollView","StyleSheet","useNavigation","useLoggerContext","jsx","_jsx","jsxs","_jsxs","createElement","_createElement","LogScreen","navigation","style","styles","container","children","title","onPress","push","EventLogList","_useLoggerContext","_useLoggerContext2","_slicedToArray","log","setLog","map","x","EventLog","_objectSpread","key","name","props","event_title","event","event_data","data","Date","toString","create","flex","backgroundColor","padding","margin","borderRadius"],"sources":["D:/IFN666 Assignment 3/Assignment3/MobileAppAssignment/screens/LogScreen.js"],"sourcesContent":["import React from \"react\";\r\nimport { Text, Button, View, ScrollView, StyleSheet } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useLoggerContext } from \"../contexts/LoggerProvider\";\r\n\r\n// const log = [\r\n//     {\r\n//         event: \"Chocolate\",\r\n//         data: [\r\n//             \"Tue Apr 21 2020 22:01:33 GMT+1000 (AEST)\",\r\n//             \"Tue Apr 21 2020 22:01:37 GMT+1000 (AEST)\",\r\n//         ],\r\n//     },\r\n//     {\r\n//         event: \"Coffee\",\r\n//         data: [\r\n//             \"Tue Apr 21 2020 22:01:21 GMT+1000 (AEST)\",\r\n//             \"Tue Apr 21 2020 22:01:28 GMT+1000 (AEST)\",\r\n//             \"Tue Apr 21 2020 22:01:30 GMT+1000 (AEST)\",\r\n//         ],\r\n//     },\r\n//     {\r\n//         event: \"Fruit\",\r\n//         data: [\r\n//             \"Tue Apr 21 2020 22:01:35 GMT+1000 (AEST)\",\r\n//             \"Tue Apr 21 2020 22:01:36 GMT+1000 (AEST)\",\r\n//         ],\r\n//     },\r\n//     {\r\n//         event: \"Walk\",\r\n//         data: [\r\n//             \"Tue Apr 21 2020 22:01:17 GMT+1000 (AEST)\",\r\n//             \"Tue Apr 21 2020 22:01:32 GMT+1000 (AEST)\",\r\n//             \"Tue Apr 21 2020 22:01:38 GMT+1000 (AEST)\",\r\n//             \"Tue Apr 21 2020 22:01:39 GMT+1000 (AEST)\",\r\n//         ],\r\n//     },\r\n// ];\r\n\r\nexport default function LogScreen() {\r\n    const navigation = useNavigation();\r\n    return (\r\n        <View style={styles.container}>\r\n            <Button\r\n                title=\"New\"\r\n                onPress={() => {\r\n                    navigation.push(\"New\");\r\n                }}\r\n            />\r\n            <EventLogList />\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction EventLogList() {\r\n    const [log, setLog] = useLoggerContext();\r\n    return (\r\n        <ScrollView style={styles.container}>\r\n            {log.map((x) => (\r\n                <EventLog {...x} key={x.name} />\r\n            ))}\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nfunction EventLog(props) {\r\n    return (\r\n        <View>\r\n            <View style={styles.event_title}>\r\n                <Text>{props.event}</Text>\r\n            </View>\r\n            <View style={styles.event_data}>\r\n                {props.data.map((x) => (\r\n                    <Text key={x}>{new Date(x).toString()}</Text>\r\n                ))}\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n    },\r\n    event_title: {\r\n        backgroundColor: \"red\",\r\n        padding: 5,\r\n        margin: 2,\r\n        borderRadius: 10,\r\n    },\r\n    event_data: {\r\n        backgroundColor: \"#fff\",\r\n        margin: 2,\r\n    },\r\n});"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,gBAAgB;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,aAAA,IAAAC,cAAA;AAoC9D,eAAe,SAASC,SAASA,CAAA,EAAG;EAChC,IAAMC,UAAU,GAAGT,aAAa,CAAC,CAAC;EAClC,OACIK,KAAA,CAACR,IAAI;IAACa,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BV,IAAA,CAACP,MAAM;MACHkB,KAAK,EAAC,KAAK;MACXC,OAAO,EAAE,SAAAA,QAAA,EAAM;QACXN,UAAU,CAACO,IAAI,CAAC,KAAK,CAAC;MAC1B;IAAE,CACL,CAAC,EACFb,IAAA,CAACc,YAAY,IAAE,CAAC;EAAA,CACd,CAAC;AAEf;AAEA,SAASA,YAAYA,CAAA,EAAG;EACpB,IAAAC,iBAAA,GAAsBjB,gBAAgB,CAAC,CAAC;IAAAkB,kBAAA,GAAAC,cAAA,CAAAF,iBAAA;IAAjCG,GAAG,GAAAF,kBAAA;IAAEG,MAAM,GAAAH,kBAAA;EAClB,OACIhB,IAAA,CAACL,UAAU;IAACY,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC/BQ,GAAG,CAACE,GAAG,CAAC,UAACC,CAAC;MAAA,OACPjB,cAAA,CAACkB,QAAQ,EAAAC,aAAA,CAAAA,aAAA,KAAKF,CAAC;QAAEG,GAAG,EAAEH,CAAC,CAACI;MAAK,EAAE,CAAC;IAAA,CACnC;EAAC,CACM,CAAC;AAErB;AAEA,SAASH,QAAQA,CAACI,KAAK,EAAE;EACrB,OACIxB,KAAA,CAACR,IAAI;IAAAgB,QAAA,GACDV,IAAA,CAACN,IAAI;MAACa,KAAK,EAAEC,MAAM,CAACmB,WAAY;MAAAjB,QAAA,EAC5BV,IAAA,CAACR,IAAI;QAAAkB,QAAA,EAAEgB,KAAK,CAACE;MAAK,CAAO;IAAC,CACxB,CAAC,EACP5B,IAAA,CAACN,IAAI;MAACa,KAAK,EAAEC,MAAM,CAACqB,UAAW;MAAAnB,QAAA,EAC1BgB,KAAK,CAACI,IAAI,CAACV,GAAG,CAAC,UAACC,CAAC;QAAA,OACdrB,IAAA,CAACR,IAAI;UAAAkB,QAAA,EAAU,IAAIqB,IAAI,CAACV,CAAC,CAAC,CAACW,QAAQ,CAAC;QAAC,GAA1BX,CAAiC,CAAC;MAAA,CAChD;IAAC,CACA,CAAC;EAAA,CACL,CAAC;AAEf;AACA,IAAMb,MAAM,GAAGZ,UAAU,CAACqC,MAAM,CAAC;EAC7BxB,SAAS,EAAE;IACPyB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACrB,CAAC;EACDR,WAAW,EAAE;IACTQ,eAAe,EAAE,KAAK;IACtBC,OAAO,EAAE,CAAC;IACVC,MAAM,EAAE,CAAC;IACTC,YAAY,EAAE;EAClB,CAAC;EACDT,UAAU,EAAE;IACRM,eAAe,EAAE,MAAM;IACvBE,MAAM,EAAE;EACZ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}