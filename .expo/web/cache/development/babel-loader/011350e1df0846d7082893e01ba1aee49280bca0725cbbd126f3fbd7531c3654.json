{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { FormControl, Input, Stack, WarningOutlineIcon, Box, Center, NativeBaseProvider, VStack, Button, Container, Heading, extend } from \"native-base\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  var handleChange = function handleChange(text) {\n    return setValue(text);\n  };\n  var navigation = useNavigation();\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(ImageBackground, {\n      source: {\n        uri: 'https://w.wallhaven.cc/full/eo/wallhaven-eod6w8.jpg'\n      },\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: _jsxs(Center, {\n        style: styles.base,\n        children: [_jsx(Heading, {\n          size: \"2xl\",\n          mb: \"3\",\n          color: \"white\",\n          children: \"Login\"\n        }), _jsx(Text, {\n          style: styles.subheading,\n          children: \"Please enter your details to sign in.\"\n        }), _jsx(BuildingAFormExample, {}), _jsxs(Text, {\n          style: styles.changetext,\n          children: [\" Don't have an account? \", _jsx(Text, {\n            style: styles.buttonish,\n            onPress: function onPress() {\n              navigation.push(\"Register\");\n            },\n            children: \"Sign up\"\n          })]\n        })]\n      })\n    })\n  });\n}\nfunction BuildingAFormExample() {\n  var _React$useState3 = React.useState({}),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    formData = _React$useState4[0],\n    setData = _React$useState4[1];\n  var _React$useState5 = React.useState({}),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    errors = _React$useState6[0],\n    setErrors = _React$useState6[1];\n  var validate = function validate() {\n    if (formData.name === undefined) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        name: 'Name is required'\n      }));\n      return false;\n    } else if (formData.name.length < 3) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        name: 'Name is too short'\n      }));\n      return false;\n    }\n    return true;\n  };\n  var onSubmit = function onSubmit() {\n    validate() ? console.log('Submitted') : console.log('Validation Failed');\n  };\n  return _jsxs(Box, {\n    alignSelf: \"center\",\n    width: \"90%\",\n    mx: \"3\",\n    children: [_jsx(Box, {\n      pb: \"5\",\n      children: _jsxs(FormControl, {\n        isInvalid: 'name' in errors,\n        children: [_jsx(FormControl.Label, {\n          _text: {\n            color: \"white\"\n          },\n          children: \"Email\"\n        }), _jsx(Input, {\n          placeholder: \"yourname@example.com\",\n          onChangeText: function onChangeText(value) {\n            return setData(_objectSpread(_objectSpread({}, formData), {}, {\n              name: value\n            }));\n          }\n        }), 'name' in errors ? _jsx(FormControl.ErrorMessage, {\n          children: \"That is not a valid email address.\"\n        }) : _jsx(FormControl.HelperText, {\n          _text: {\n            color: \"white\"\n          },\n          children: \"Please enter your email address.\"\n        })]\n      })\n    }), _jsx(Box, {\n      children: _jsxs(FormControl, {\n        children: [_jsx(FormControl.Label, {\n          _text: {\n            color: \"white\"\n          },\n          children: \"Password\"\n        }), _jsx(Input, {\n          type: \"password\",\n          placeholder: \"Password\"\n        }), _jsx(FormControl.HelperText, {\n          _text: {\n            color: \"white\"\n          },\n          children: \"Must be atleast 6 characters.\"\n        }), _jsx(FormControl.ErrorMessage, {\n          leftIcon: _jsx(WarningOutlineIcon, {\n            size: \"xs\"\n          }),\n          children: \"Please enter your password.\"\n        })]\n      })\n    }), _jsx(Button, {\n      onPress: onSubmit,\n      mt: \"5\",\n      style: styles.button,\n      children: \"Login\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1\n  },\n  base: {\n    backgroundColor: '#000000c0',\n    flex: 1\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: '#354F52'\n  },\n  subheading: {\n    color: 'white',\n    fontSize: 14,\n    textAlign: 'center',\n    marginBottom: 100,\n    justifyContent: \"flex-start\"\n  },\n  changetext: {\n    color: 'white',\n    fontSize: 14,\n    textAlign: 'center',\n    marginTop: 15,\n    justifyContent: \"flex-end\"\n  },\n  buttonish: {\n    fontWeight: \"900\"\n  }\n});","map":{"version":3,"names":["React","useState","Text","View","TextInput","StyleSheet","ImageBackground","FormControl","Input","Stack","WarningOutlineIcon","Box","Center","NativeBaseProvider","VStack","Button","Container","Heading","extend","useNavigation","jsx","_jsx","jsxs","_jsxs","LoginScreen","_React$useState","_React$useState2","_slicedToArray","value","setValue","handleChange","text","navigation","children","source","uri","resizeMode","style","styles","image","base","size","mb","color","subheading","BuildingAFormExample","changetext","buttonish","onPress","push","_React$useState3","_React$useState4","formData","setData","_React$useState5","_React$useState6","errors","setErrors","validate","name","undefined","_objectSpread","length","onSubmit","console","log","alignSelf","width","mx","pb","isInvalid","Label","_text","placeholder","onChangeText","ErrorMessage","HelperText","type","leftIcon","mt","button","create","flex","backgroundColor","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","fontSize","textAlign","marginBottom","marginTop","fontWeight"],"sources":["D:/IFN666 Assignment 3/Assignment3/MobileAppAssignment/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, View, TextInput, StyleSheet, ImageBackground } from \"react-native\";\r\nimport { FormControl, Input, Stack, WarningOutlineIcon, Box, Center, NativeBaseProvider, VStack, Button, Container, Heading, extend } from \"native-base\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport default function LoginScreen() {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const handleChange = text => setValue(text);\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      {/* TODO:\r\n        If user exists then log in\r\n        else create user account\r\n        Need to render different forms for the above */}\r\n      <ImageBackground source={{ uri: 'https://w.wallhaven.cc/full/eo/wallhaven-eod6w8.jpg' }} resizeMode=\"cover\" style={styles.image}>\r\n        <Center style={styles.base}>\r\n          <Heading size={\"2xl\"} mb=\"3\" color=\"white\">Login</ Heading >\r\n          <Text style={styles.subheading}>Please enter your details to sign in.</ Text >\r\n          <BuildingAFormExample />\r\n          <Text style={styles.changetext}> Don't have an account? <Text style={styles.buttonish} onPress={() => { navigation.push(\"Register\"); }}>Sign up</Text></Text>\r\n        </Center>\r\n      </ImageBackground>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\nfunction BuildingAFormExample() {\r\n  const [formData, setData] = React.useState({});\r\n  const [errors, setErrors] = React.useState({});\r\n\r\n  const validate = () => {\r\n    if (formData.name === undefined) {\r\n      setErrors({\r\n        ...errors,\r\n        name: 'Name is required'\r\n      });\r\n      return false;\r\n    } else if (formData.name.length < 3) {\r\n      setErrors({\r\n        ...errors,\r\n        name: 'Name is too short'\r\n      });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    validate() ? console.log('Submitted') : console.log('Validation Failed');\r\n  };\r\n\r\n  return (\r\n    <Box alignSelf=\"center\" width=\"90%\" mx=\"3\">\r\n      <Box pb=\"5\">\r\n        <FormControl isInvalid={'name' in errors}>\r\n          <FormControl.Label _text={{\r\n            color: \"white\"\r\n          }}>Email</FormControl.Label>\r\n          <Input placeholder=\"yourname@example.com\" onChangeText={value => setData({\r\n            ...formData,\r\n            name: value\r\n          })} />\r\n          {'name' in errors ? <FormControl.ErrorMessage>That is not a valid email address.</FormControl.ErrorMessage> : <FormControl.HelperText _text={{\r\n            color: \"white\"\r\n          }}>\r\n            Please enter your email address.\r\n          </FormControl.HelperText>}\r\n        </FormControl>\r\n      </Box>\r\n      <Box>\r\n        <FormControl>\r\n          <FormControl.Label _text={{\r\n            color: \"white\"\r\n          }}>Password</FormControl.Label>\r\n          <Input type=\"password\" placeholder=\"Password\" />\r\n          <FormControl.HelperText _text={{\r\n            color: \"white\"\r\n          }}>\r\n            Must be atleast 6 characters.\r\n          </FormControl.HelperText>\r\n          <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\r\n            Please enter your password.\r\n          </FormControl.ErrorMessage>\r\n        </FormControl>\r\n      </Box>\r\n      <Button onPress={onSubmit} mt=\"5\" style={styles.button}>\r\n        Login\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    flex: 1,\r\n  },\r\n  base: {\r\n    backgroundColor: '#000000c0',\r\n    flex: 1,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 32,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: '#354F52',\r\n  },\r\n  subheading: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n    textAlign: 'center',\r\n    marginBottom: 100,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  changetext: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n    textAlign: 'center',\r\n    marginTop: 15,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  buttonish: {\r\n    fontWeight: \"900\",\r\n  }\r\n});\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,eAAA;AAExC,SAASC,WAAW,EAAEC,KAAK,EAAEC,KAAK,EAAEC,kBAAkB,EAAEC,GAAG,EAAEC,MAAM,EAAEC,kBAAkB,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEC,OAAO,EAAEC,MAAM,QAAQ,aAAa;AACxJ,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,eAAe,SAASC,WAAWA,CAAA,EAAG;EACpC,IAAAC,eAAA,GAA0BzB,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;IAAAyB,gBAAA,GAAAC,cAAA,CAAAF,eAAA;IAArCG,KAAK,GAAAF,gBAAA;IAAEG,QAAQ,GAAAH,gBAAA;EACtB,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAGC,IAAI;IAAA,OAAIF,QAAQ,CAACE,IAAI,CAAC;EAAA;EAC3C,IAAMC,UAAU,GAAGb,aAAa,CAAC,CAAC;EAElC,OACEE,IAAA,CAACR,kBAAkB;IAAAoB,QAAA,EAKjBZ,IAAA,CAACf,eAAe;MAAC4B,MAAM,EAAE;QAAEC,GAAG,EAAE;MAAsD,CAAE;MAACC,UAAU,EAAC,OAAO;MAACC,KAAK,EAAEC,MAAM,CAACC,KAAM;MAAAN,QAAA,EAC9HV,KAAA,CAACX,MAAM;QAACyB,KAAK,EAAEC,MAAM,CAACE,IAAK;QAAAP,QAAA,GACzBZ,IAAA,CAACJ,OAAO;UAACwB,IAAI,EAAE,KAAM;UAACC,EAAE,EAAC,GAAG;UAACC,KAAK,EAAC,OAAO;UAAAV,QAAA,EAAC;QAAK,CAAW,CAAC,EAC5DZ,IAAA,CAACnB,IAAI;UAACmC,KAAK,EAAEC,MAAM,CAACM,UAAW;UAAAX,QAAA,EAAC;QAAqC,CAAQ,CAAC,EAC9EZ,IAAA,CAACwB,oBAAoB,IAAE,CAAC,EACxBtB,KAAA,CAACrB,IAAI;UAACmC,KAAK,EAAEC,MAAM,CAACQ,UAAW;UAAAb,QAAA,GAAC,0BAAwB,EAAAZ,IAAA,CAACnB,IAAI;YAACmC,KAAK,EAAEC,MAAM,CAACS,SAAU;YAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;cAAEhB,UAAU,CAACiB,IAAI,CAAC,UAAU,CAAC;YAAE,CAAE;YAAAhB,QAAA,EAAC;UAAO,CAAM,CAAC;QAAA,CAAM,CAAC;MAAA,CACvJ;IAAC,CACM;EAAC,CACA,CAAC;AAEzB;AAEA,SAASY,oBAAoBA,CAAA,EAAG;EAC9B,IAAAK,gBAAA,GAA4BlD,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAkD,gBAAA,GAAAxB,cAAA,CAAAuB,gBAAA;IAAvCE,QAAQ,GAAAD,gBAAA;IAAEE,OAAO,GAAAF,gBAAA;EACxB,IAAAG,gBAAA,GAA4BtD,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAsD,gBAAA,GAAA5B,cAAA,CAAA2B,gBAAA;IAAvCE,MAAM,GAAAD,gBAAA;IAAEE,SAAS,GAAAF,gBAAA;EAExB,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrB,IAAIN,QAAQ,CAACO,IAAI,KAAKC,SAAS,EAAE;MAC/BH,SAAS,CAAAI,aAAA,CAAAA,aAAA,KACJL,MAAM;QACTG,IAAI,EAAE;MAAkB,EACzB,CAAC;MACF,OAAO,KAAK;IACd,CAAC,MAAM,IAAIP,QAAQ,CAACO,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;MACnCL,SAAS,CAAAI,aAAA,CAAAA,aAAA,KACJL,MAAM;QACTG,IAAI,EAAE;MAAmB,EAC1B,CAAC;MACF,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC;EAED,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrBL,QAAQ,CAAC,CAAC,GAAGM,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,GAAGD,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAC1E,CAAC;EAED,OACE1C,KAAA,CAACZ,GAAG;IAACuD,SAAS,EAAC,QAAQ;IAACC,KAAK,EAAC,KAAK;IAACC,EAAE,EAAC,GAAG;IAAAnC,QAAA,GACxCZ,IAAA,CAACV,GAAG;MAAC0D,EAAE,EAAC,GAAG;MAAApC,QAAA,EACTV,KAAA,CAAChB,WAAW;QAAC+D,SAAS,EAAE,MAAM,IAAId,MAAO;QAAAvB,QAAA,GACvCZ,IAAA,CAACd,WAAW,CAACgE,KAAK;UAACC,KAAK,EAAE;YACxB7B,KAAK,EAAE;UACT,CAAE;UAAAV,QAAA,EAAC;QAAK,CAAmB,CAAC,EAC5BZ,IAAA,CAACb,KAAK;UAACiE,WAAW,EAAC,sBAAsB;UAACC,YAAY,EAAE,SAAAA,aAAA9C,KAAK;YAAA,OAAIyB,OAAO,CAAAQ,aAAA,CAAAA,aAAA,KACnET,QAAQ;cACXO,IAAI,EAAE/B;YAAK,EACZ,CAAC;UAAA;QAAC,CAAE,CAAC,EACL,MAAM,IAAI4B,MAAM,GAAGnC,IAAA,CAACd,WAAW,CAACoE,YAAY;UAAA1C,QAAA,EAAC;QAAkC,CAA0B,CAAC,GAAGZ,IAAA,CAACd,WAAW,CAACqE,UAAU;UAACJ,KAAK,EAAE;YAC3I7B,KAAK,EAAE;UACT,CAAE;UAAAV,QAAA,EAAC;QAEH,CAAwB,CAAC;MAAA,CACd;IAAC,CACX,CAAC,EACNZ,IAAA,CAACV,GAAG;MAAAsB,QAAA,EACFV,KAAA,CAAChB,WAAW;QAAA0B,QAAA,GACVZ,IAAA,CAACd,WAAW,CAACgE,KAAK;UAACC,KAAK,EAAE;YACxB7B,KAAK,EAAE;UACT,CAAE;UAAAV,QAAA,EAAC;QAAQ,CAAmB,CAAC,EAC/BZ,IAAA,CAACb,KAAK;UAACqE,IAAI,EAAC,UAAU;UAACJ,WAAW,EAAC;QAAU,CAAE,CAAC,EAChDpD,IAAA,CAACd,WAAW,CAACqE,UAAU;UAACJ,KAAK,EAAE;YAC7B7B,KAAK,EAAE;UACT,CAAE;UAAAV,QAAA,EAAC;QAEH,CAAwB,CAAC,EACzBZ,IAAA,CAACd,WAAW,CAACoE,YAAY;UAACG,QAAQ,EAAEzD,IAAA,CAACX,kBAAkB;YAAC+B,IAAI,EAAC;UAAI,CAAE,CAAE;UAAAR,QAAA,EAAC;QAEtE,CAA0B,CAAC;MAAA,CAChB;IAAC,CACX,CAAC,EACNZ,IAAA,CAACN,MAAM;MAACiC,OAAO,EAAEe,QAAS;MAACgB,EAAE,EAAC,GAAG;MAAC1C,KAAK,EAAEC,MAAM,CAAC0C,MAAO;MAAA/C,QAAA,EAAC;IAExD,CAAQ,CAAC;EAAA,CACN,CAAC;AAEV;AAEA,IAAMK,MAAM,GAAGjC,UAAU,CAAC4E,MAAM,CAAC;EAC/B1C,KAAK,EAAE;IACL2C,IAAI,EAAE;EACR,CAAC;EACD1C,IAAI,EAAE;IACJ2C,eAAe,EAAE,WAAW;IAC5BD,IAAI,EAAE;EACR,CAAC;EACDF,MAAM,EAAE;IACNI,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE,CAAC;IACZN,eAAe,EAAE;EACnB,CAAC;EACDvC,UAAU,EAAE;IACVD,KAAK,EAAE,OAAO;IACd+C,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE,GAAG;IACjBP,cAAc,EAAE;EAClB,CAAC;EACDvC,UAAU,EAAE;IACVH,KAAK,EAAE,OAAO;IACd+C,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBE,SAAS,EAAE,EAAE;IACbR,cAAc,EAAE;EAClB,CAAC;EACDtC,SAAS,EAAE;IACT+C,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}